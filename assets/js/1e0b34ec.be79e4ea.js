"use strict";(self.webpackChunkdocumentation_lpo=self.webpackChunkdocumentation_lpo||[]).push([[957],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var s=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,i=function(e,t){if(null==e)return{};var n,s,i={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=s.createContext({}),u=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return s.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?s.createElement(f,a(a({ref:t},c),{},{components:n})):s.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:i,a[1]=o;for(var u=2;u<r;u++)a[u]=n[u];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8672:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var s=n(7462),i=(n(7294),n(3905));const r={sidebar_position:3},a=void 0,o={unversionedId:"FrontEnd/Authentification et Gestion des Comptes/Gestion des Comptes",id:"FrontEnd/Authentification et Gestion des Comptes/Gestion des Comptes",title:"Gestion des Comptes",description:"image",source:"@site/docs/FrontEnd/Authentification et Gestion des Comptes/Gestion des Comptes.md",sourceDirName:"FrontEnd/Authentification et Gestion des Comptes",slug:"/FrontEnd/Authentification et Gestion des Comptes/Gestion des Comptes",permalink:"/Documentation-LPO/docs/FrontEnd/Authentification et Gestion des Comptes/Gestion des Comptes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/FrontEnd/Authentification et Gestion des Comptes/Gestion des Comptes.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"myslidebar",previous:{title:"Authentification",permalink:"/Documentation-LPO/docs/FrontEnd/Authentification et Gestion des Comptes/Authentification"},next:{title:"Fonctions utilis",permalink:"/Documentation-LPO/docs/FrontEnd/Authentification et Gestion des Comptes/Fonctions utilis"}},l={},u=[{value:"Adminstrateur",id:"adminstrateur",level:2},{value:"Observateur",id:"observateur",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,s.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("table",{Style:"width: 100%; border-top: 1px solid transparent;"},(0,i.kt)("tr",{Style:"display: flex;"},(0,i.kt)("td",{Style:"width: 4000px;   border: 1px solid transparent;  text-align: center; align: middle; margin-top:50px; "},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image",src:n(9842).Z,width:"260",height:"384"}))),(0,i.kt)("td",{Style:" border: 1px solid transparent;"},(0,i.kt)("th",null,(0,i.kt)("p",null,"Le dossier ",(0,i.kt)("em",{parentName:"p"},"Admin")," et ",(0,i.kt)("em",{parentName:"p"},"Observateur")," est un sous dossier de dossier pages qui contient l'ensemble des pages de notre application. Ce dernier contient les pages li\xe9es a la Gestion des comptes par l'Adminstrateur(Tous les comptes) et l'Observateur(Son compte) ","[plus de d\xe9tail dans les sections pr\xe9c\xe9dentes]")),(0,i.kt)("h2",{id:"adminstrateur"},"Adminstrateur"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Le Fichier ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"form.jsx"))," du dossier ",(0,i.kt)("em",{parentName:"li"},"createAccount")," est une fonction React qui cr\xe9e un formulaire pour cr\xe9er un compte utilisateur. Elle utilise des composants MUI (Material-UI) tels que TextField, Box, Button, Stack, Select et MenuItem pour afficher diff\xe9rents champs de saisie pour les informations de l'utilisateur.\nLe formulaire contient \xe9galement une liste d\xe9roulante pour s\xe9lectionner le r\xf4le de l'utilisateur, avec des options pr\xe9d\xe9finies dans la constante ROLES.Ce formulaire effectue \xe9galement des validations pour les champs d'email, de mot de passe et de r\xf4le, et affiche des messages d'erreur appropri\xe9s si les informations saisies ne sont pas valides.")),(0,i.kt)("p",null,"En outre, le formulaire utilise le composant CircularProgress pour afficher une ic\xf4ne de chargement pendant que les donn\xe9es de l'utilisateur sont en cours de traitement."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Le Fichier ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"index.jsx"))," du dossier ",(0,i.kt)("em",{parentName:"p"},"createAccount"),' est un composant React pour cr\xe9er un nouveau compte utilisateur. Il utilise des d\xe9pendances telles que "react", "react-redux" et "@mui/material" pour la mise en forme des composants.Ce composant cr\xe9e un \xe9tat local "info" avec des champs tels que "prenom", "nom", "adresse1", "adresse2", "ville", "password", "telephone", "code", "code_postal", "roles", "email". Lorsque l\'utilisateur saisit des informations dans les champs de formulaire, la fonction handleChange est appel\xe9e pour mettre \xe0 jour l\'\xe9tat local.Ce dernier utilise \xe9galement une fonction verify_info_valid_create pour v\xe9rifier si les champs obligatoires sont remplis et si le format du mot de passe, de l\'e-mail et du num\xe9ro de t\xe9l\xe9phone est correct. Si la v\xe9rification r\xe9ussit, il appelle une fonction handleClick pour cr\xe9er un nouveau compte utilisateur en dispatchant l\'action "createAccount" vers Redux.Le composant utilise \xe9galement un composant "CustomSnackBar" pour afficher des messages d\'erreur ou de succ\xe8s lorsqu\'un compte est cr\xe9\xe9 ou qu\'une erreur se produit.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Le Fichier ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"index.jsx"))," du dossier ",(0,i.kt)("em",{parentName:"p"},"editAccount")," code est un composant React pour la fonctionnalit\xe9 d'\xe9dition de compte utilisateur pour un administrateur. Il utilise des hooks React comme useState, useEffect et useSelector, ainsi que des composants MUI tels que Paper et CircularProgress. Il utilise \xe9galement react-router-dom pour la navigation entre les pages.Ce composant r\xe9cup\xe8re l'ID de l'utilisateur \xe0 \xe9diter \xe0 partir des param\xe8tres d'URL et utilise le useEffect pour r\xe9cup\xe9rer les informations de l'utilisateur \xe0 partir du backend via Redux. Le composant affiche ensuite un formulaire pr\xe9-rempli avec les informations r\xe9cup\xe9r\xe9es de l'utilisateur."))),(0,i.kt)("p",null,"Lorsque l'utilisateur apporte des modifications et soumet le formulaire, le composant v\xe9rifie que les informations saisies sont valides \xe0 l'aide de la fonction verify_info_valid_edit et envoie les modifications au backend via Redux. Si la modification est r\xe9ussie, le composant affiche un message de confirmation avec un CustomSnackBar."),(0,i.kt)("h2",{id:"observateur"},"Observateur"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Le Fichier ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"index.jsx"))," est un composant React appel\xe9 MyAccount. Il importe des modules tels que Stack, Paper et MesInfos et utilise des hooks tels que useDispatch, useSelector et useState. Il utilise \xe9galement la fonction jwt_decode pour d\xe9coder un jeton JWT stock\xe9 dans le stockage local.Ce composant cr\xe9e un \xe9tat initial pour les informations d'utilisateur avec des champs tels que le nom, le pr\xe9nom, l'adresse, le code postal, le t\xe9l\xe9phone et le mot de passe. Le champ \"roles\" est \xe9galement initialis\xe9 avec un tableau vide.Il y a une fonction handleClick qui est appel\xe9e lorsque l'utilisateur clique sur le bouton de modification d'informations d'utilisateur. Cette fonction appelle la fonction editAccount avec les informations d'utilisateur mises \xe0 jour et stock\xe9es dans l'\xe9tat.")),(0,i.kt)("p",null,"Le composant utilise \xe9galement un hook personnalis\xe9 appel\xe9 useSnackBar pour afficher des messages d'erreur ou de succ\xe8s dans un CustomSnackBar."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Le Fichier ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"changePassword.jsx")),"   est une impl\xe9mentation d'une fonctionnalit\xe9 de changement de mot de passe \xe0 plusieurs \xe9tapes. Il utilise des composants de la biblioth\xe8que Material-UI pour cr\xe9er une interface utilisateur conviviale pour l'utilisateur final. Il valide \xe9galement les entr\xe9es de l'utilisateur \xe0 chaque \xe9tape pour s'assurer qu'elles sont valides avant de passer \xe0 l'\xe9tape suivante. Une fois toutes les \xe9tapes valid\xe9es, il envoie une requ\xeate au backend pour mettre \xe0 jour le mot de passe de l'utilisateur.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Le Fichier ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"MesInfos.jsx")),"  est un composant React appel\xe9 MesInfosStatique qui rend un formulaire avec des champs d'entr\xe9e en utilisant la biblioth\xe8que Material-UI. Le formulaire contient des informations personnelles telles que le code et le r\xf4le, ainsi que des statistiques telles que la distance parcourue. Le composant est utilis\xe9 pour afficher les informations statiques d'un utilisateur et n'est pas interactif.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Le Fichier ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"MesInfosStatique.jsx")),"  est un composant ObsStat est utilis\xe9 pour afficher des statistiques observ\xe9es. Il prend en entr\xe9e un titre, une unit\xe9 et une valeur, qui sont affich\xe9s dans un Paper (un composant qui repr\xe9sente un conteneur rectangulaire avec des ombres et un fond)."))),(0,i.kt)("p",null,"Le composant MesInfosStatique affiche les informations statiques d'un utilisateur (un code et un r\xf4le) ainsi que des statistiques observ\xe9es pour trois \xe9l\xe9ments diff\xe9rents. Il utilise le composant ObsStat pour chaque statistique et les affiche dans une grille (Grid) avec deux colonnes pour les informations de l'utilisateur et les statistiques observ\xe9es."),(0,i.kt)("p",null,"Les champs de texte (TextField) sont \xe9galement utilis\xe9s pour afficher le code et le r\xf4le de l'utilisateur.")))))}d.isMDXComponent=!0},9842:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/gestioncompte-0fe5991bc0dbe1a007ce720f05d35379.png"}}]);